CREATE DATABASE legacy_gym;
USE legacy_gym;

-- Members Table
CREATE TABLE MEMBERS (
    MEM_ID VARCHAR(15) PRIMARY KEY,
    PWD VARCHAR(100),
    GENDER ENUM('Male', 'Female', 'Other'),
    EMAIL VARCHAR(100) UNIQUE,
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    BRANCH_ID VARCHAR(15),
    STATUS ENUM('Active', 'Inactive')
);
ALTER TABLE MEMBERS ALTER COLUMN STATUS SET DEFAULT 'Inactive';
alter table members 
drop column PLAN_ID;
ALTER TABLE members ADD FOREIGN KEY (branch_id) REFERENCES branches(BRANCH_ID); 

-- Owners Table
CREATE TABLE OWNERS (
    OWN_ID VARCHAR(15) PRIMARY KEY,
    PWD VARCHAR(100)
);

-- Plans Table
CREATE TABLE PLANS (
    PLAN_ID VARCHAR(15) PRIMARY KEY,
    PRICING DECIMAL(10, 2) NOT NULL,
    DURATION INT NOT NULL
);
ALTER TABLE PLANS ADD COLUMN DESCRIPTION VARCHAR(50);
-- Subscription Table
CREATE TABLE SUBSCRIPTION (
    PLAN_ID VARCHAR(15) NOT NULL,
    MEM_ID VARCHAR(15) NOT NULL,
    START_DATE DATE NOT NULL,
    PRIMARY KEY (PLAN_ID, MEM_ID),
    FOREIGN KEY (PLAN_ID) REFERENCES PLANS(PLAN_ID),
    FOREIGN KEY (MEM_ID) REFERENCES MEMBERS(MEM_ID)
);

ALTER TABLE SUBSCRIPTION ADD COLUMN TRANSACTION_ID VARCHAR(15);
ALTER TABLE SUBSCRIPTION ADD FOREIGN KEY (TRANSACTION_ID) REFERENCES PAYMENTS(TRANS_ID);
ALTER TABLE SUBSCRIPTION DROP PRIMARY KEY, ADD PRIMARY KEY (PLAN_ID, MEM_ID, TRANSACTION_ID);
-- Classes Table
CREATE TABLE CLASSES (
    CLASS_ID VARCHAR(15) PRIMARY KEY,
    CLASS_NAME VARCHAR(20),
    TRAINER_ID VARCHAR(15),
    DAY CHAR(3)
);
ALTER TABLE CLASSES
ADD FOREIGN KEY (TRAINER_ID) REFERENCES TRAINERS(TRAIN_ID);

SELECT TRAINER_ID 
FROM CLASSES 
WHERE TRAINER_ID NOT IN (SELECT TRAIN_ID FROM TRAINERS);


drop table classes;
drop table classes_opted;
CREATE TABLE CLASSES_OPTED (
	cid int Primary key AUTO_INCREMENT,
	MEM_ID VARCHAR(15) ,
    CLASS_ID VARCHAR(15),
    FOREIGN KEY (CLASS_ID) REFERENCES CLASSES (CLASS_ID),
    FOREIGN KEY (MEM_ID) REFERENCES MEMBERS(MEM_ID)
);	
-- Trainers Table
CREATE TABLE TRAINERS (
    TRAIN_ID VARCHAR(15) PRIMARY KEY,
    FIRST_NAME VARCHAR(50),
    LAST_NAME VARCHAR(50),
    GENDER ENUM('Male', 'Female', 'Other'),
    EMAIL VARCHAR(100),
    BRANCH_ID VARCHAR(15),
	PWD VARCHAR(100)
);

ALTER TABLE TRAINERS 
ADD COLUMN PWD VARCHAR(100) NOT NULL;

ALTER TABLE trainers ADD FOREIGN KEY (BRANCH_ID) REFERENCES branches(BRANCH_ID); 

-- Payments Table
CREATE TABLE PAYMENTS (
	TRANSACTION_TYPE ENUM ('SALARY', 'MEMBERSHIP'),
    TRANS_ID VARCHAR(15) PRIMARY KEY,
    SENDER_ID VARCHAR(15),
    RECEIVER_ID VARCHAR(15),
    AMOUNT DECIMAL(10, 2),
    TIMESTAMP DATETIME
);
ALTER TABLE PAYMENTS MODIFY COLUMN TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

drop table payments;
-- Insert multiple records into the PAYMENTS table in one statement
INSERT INTO PAYMENTS (TRANSACTION_TYPE, TRANS_ID, SENDER_ID, RECEIVER_ID, AMOUNT, TIMESTAMP)
VALUES
    ('SALARY', 'T0001', 'OWNER', 'TR0001', 5000.00, NOW()),  -- Using current date
    ('SALARY', 'T0002', 'OWNER', 'TR0002', 5000.00, NOW()),  -- Using current date
    ('SALARY', 'T0003', 'OWNER', 'TR0003', 5000.00, '2024-11-09 12:00:00'),  -- Using yesterday's date
    ('MEMBERSHIP', 'M0001', 'MEM0001', 'OWNER', 1500.00, '2024-11-09 12:00:00'),  -- Using yesterday's date
    ('MEMBERSHIP', 'M0002', 'MEM0002', 'OWNER', 1500.00, '2024-11-09 12:00:00'),  -- Using yesterday's date
    ('MEMBERSHIP', 'M0003', 'MEM0003', 'OWNER', 1500.00, '2024-11-09 12:00:00');  -- Using yesterday's date



-- Equipments Table
CREATE TABLE EQUIPMENTS (
    EQUIP_ID VARCHAR(15),
    BRANCH_ID VARCHAR(15),
    EQUIP_NAME VARCHAR(50),
    LAST_MAINTENANCE_DAY DATE,
    NEXT_MAINTENANCE_DAY DATE,
    PRIMARY KEY (EQUIP_ID, BRANCH_ID),
    FOREIGN KEY (BRANCH_ID) REFERENCES BRANCHES(BRANCH_ID)
);


CREATE TABLE BRANCHES (
	BRANCH_ID VARCHAR(15) PRIMARY KEY,
    BRANCH_NAME VARCHAR(15) 
    );
    drop table branches;
-- Multivalued Phone Number Table for Members
CREATE TABLE MEM_PH (
    MEM_ID VARCHAR(15),
    PHONE_NUMBER VARCHAR(15),
    PRIMARY KEY (MEM_ID, PHONE_NUMBER),
    FOREIGN KEY (MEM_ID) REFERENCES MEMBERS(MEM_ID)
);

-- Multivalued Phone Number Table for Trainers
CREATE TABLE TRAIN_PH (
    TRAIN_ID VARCHAR(15),
    PHONE_NUMBER VARCHAR(15),
    PRIMARY KEY (TRAIN_ID, PHONE_NUMBER),
    FOREIGN KEY (TRAIN_ID) REFERENCES TRAINERS(TRAIN_ID)
);
